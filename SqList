class SqList:
    def __init__(self):#初始化
        self.capacity = 1
        self.data = [None]*self.capacity
        self.size = 0
    def createList(self,fa):#建立线性表
        while len(fa)>self.capacity:
            self.data = self.data +[None]*self.capacity
            self.capacity *= 2
        for i in fa:
            self.data[self.size] = i
            self.size +=1
    def add(self,e):#往线性表中增加元素
        if self.capacity == self.size+1:
            self.data = self.data + [None] * self.capacity
            self.capacity *= 2
        self.data[self.size] = e
        self.size+=1
    def getsize(self):#得到线性表的长度
        return self.size
    def getelem(self,i):#得到i位置的值
        if i > self.size:
            raise IndexError("no find index")
        return self.data[i]
    def setelem(self,i,e):#将i位置的值改为e
        if i < self.size:
            raise SyntaxError("错误的索引")
        self.data[i] = e
    def getno(self,e):#得到值为e的第一个索引
        f = 0
        for i in range(self.size):
            if self.data[i] == e:
                return i
        if not f:
            raise IndexError("没有找到元素")
    def insert(self,i,e):#在i位置插入元素
        for j in range(self.size-1,i-1,-1):
            self.data[j+1] =self.data[j]
        self.data[i] = e
        self.size += 1
    def delete(self,i):#删除i位置的元素
        for j in range(i,self.size+1):
            self.data[j-1] = self.data[j]
        self.size -= 1
    def display(self):#展示所有元素
        for i in range(self.size):
            print(self.data[i])
list1 = [1,2,3,4,5,6,7]#序号以0为起点
tt = SqList()
tt.createList(list1)
# tt.display()
# tt.add(100)
# tt.display()
# print(tt.getsize())
# print(tt.getelem(1))
# print(tt.getno(5))
# tt.insert(4,1000)
# tt.display()
# tt.delete(4)
# tt.display()
